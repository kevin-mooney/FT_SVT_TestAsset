// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>html_8604_iFrame</b><br>
 * Generated     : <b>2019/02/12 1:01:41 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 8.1 x86 6.3 <br>
 * 
 * @since  February 12, 2019
 * @author JaspreetSinghC
 */
public abstract class html_8604_iFrameHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : Firefox
	 * 		.processName : firefox.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : Firefox
	 * 		.processName : firefox.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * Reset: with default state.
	 *		.id : 
	 * 		.type : reset
	 * 		.value : Reset
	 * 		.title : 
	 * 		.class : Html.INPUT.reset
	 * 		.name : Reset
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_reset() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_reset"));
	}
	/**
	 * Reset: with specific test context and state.
	 *		.id : 
	 * 		.type : reset
	 * 		.value : Reset
	 * 		.title : 
	 * 		.class : Html.INPUT.reset
	 * 		.name : Reset
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_reset(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_reset"), anchor, flags);
	}
	
	/**
	 * YesIWantToRegisterToWinTheComputerChairsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Yes, I want to register to win the computer chair
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_yesIWantToRegisterToWin() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_yesIWantToRegisterToWin"));
	}
	/**
	 * YesIWantToRegisterToWinTheComputerChairsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Yes, I want to register to win the computer chair
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : submit
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_yesIWantToRegisterToWin(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_yesIWantToRegisterToWin"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel :     
	 * 		accessibleContext.accessibleName : Close
	 * 		.classIndex : 2
	 */
	protected GuiTestObject close() 
	{
		return new GuiTestObject(
                        getMappedTestObject("close"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel :     
	 * 		accessibleContext.accessibleName : Close
	 * 		.classIndex : 2
	 */
	protected GuiTestObject close(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("close"), anchor, flags);
	}
	
	/**
	 * CloseFirefox: with default state.
	 *		.text : Close Firefox
	 * 		.class : MozillaDialogClass
	 * 		.processName : firefox.exe
	 * 		.name : Close Firefox
	 */
	protected TopLevelSubitemTestObject closeFirefoxwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("closeFirefoxwindow"));
	}
	/**
	 * CloseFirefox: with specific test context and state.
	 *		.text : Close Firefox
	 * 		.class : MozillaDialogClass
	 * 		.processName : firefox.exe
	 * 		.name : Close Firefox
	 */
	protected TopLevelSubitemTestObject closeFirefoxwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("closeFirefoxwindow"), anchor, flags);
	}
	
	/**
	 * AriesWebContestPageIframe: with default state.
	 *		.title : Aries-web contest page - Iframe
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/iframe/aries-webContestPageiframe. ...
	 */
	protected DocumentTestObject document_ariesWebContestPageIf() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ariesWebContestPageIf"));
	}
	/**
	 * AriesWebContestPageIframe: with specific test context and state.
	 *		.title : Aries-web contest page - Iframe
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/iframe/aries-webContestPageiframe. ...
	 */
	protected DocumentTestObject document_ariesWebContestPageIf(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ariesWebContestPageIf"), anchor, flags);
	}
	
	/**
	 * ContestPage: with default state.
	 *		.title : Contest page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/samples/visionofficeproducts/conte ...
	 */
	protected DocumentTestObject document_contestPage() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_contestPage"));
	}
	/**
	 * ContestPage: with specific test context and state.
	 *		.title : Contest page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/samples/visionofficeproducts/conte ...
	 */
	protected DocumentTestObject document_contestPage(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_contestPage"), anchor, flags);
	}
	
	/**
	 * httpCivcez229NonprodHclpnpComAriesWebSamplesVisionoffi: with default state.
	 *		.title : 
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/samples/visionofficeproducts/nores ...
	 */
	protected DocumentTestObject document_httpCivcez229NonprodH() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_httpCivcez229NonprodH"));
	}
	/**
	 * httpCivcez229NonprodHclpnpComAriesWebSamplesVisionoffi: with specific test context and state.
	 *		.title : 
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/samples/visionofficeproducts/nores ...
	 */
	protected DocumentTestObject document_httpCivcez229NonprodH(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_httpCivcez229NonprodH"), anchor, flags);
	}
	
	/**
	 * position: with default state.
	 *		.text : Please select from below Professional Staff Management Senior Management Preside ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : position
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_position() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_position"));
	}
	/**
	 * position: with specific test context and state.
	 *		.text : Please select from below Professional Staff Management Senior Management Preside ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : position
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_position(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_position"), anchor, flags);
	}
	
	/**
	 * salary: with default state.
	 *		.text : Please select from below Under $25,000 $25,001 to $50,000 $50,001 to $75,000 $75 ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : salary
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_salary() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_salary"));
	}
	/**
	 * salary: with specific test context and state.
	 *		.text : Please select from below Under $25,000 $25,001 to $50,000 $50,001 to $75,000 $75 ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : salary
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_salary(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_salary"), anchor, flags);
	}
	
	/**
	 * buyerno: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : no
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : buyer
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_buyerno() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_buyerno"));
	}
	/**
	 * buyerno: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : no
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : buyer
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_buyerno(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_buyerno"), anchor, flags);
	}
	
	/**
	 * buyeryes: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : yes
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : buyer
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_buyeryes() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_buyeryes"));
	}
	/**
	 * buyeryes: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : yes
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : buyer
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_buyeryes(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_buyeryes"), anchor, flags);
	}
	
	/**
	 * HtmlTable_0: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_0() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_0"));
	}
	/**
	 * HtmlTable_0: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_0(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_0"), anchor, flags);
	}
	
	/**
	 * buyerDescription: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : buyer description
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_buyerDescription() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_buyerDescription"));
	}
	/**
	 * buyerDescription: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : buyer description
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_buyerDescription(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_buyerDescription"), anchor, flags);
	}
	
	/**
	 * City: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : City
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_city() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_city"));
	}
	/**
	 * City: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : City
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_city(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_city"), anchor, flags);
	}
	
	/**
	 * HtmlINPUTText: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_htmlINPUTText() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_htmlINPUTText"));
	}
	/**
	 * HtmlINPUTText: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_htmlINPUTText(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_htmlINPUTText"), anchor, flags);
	}
	
	/**
	 * Name: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"));
	}
	/**
	 * Name: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"), anchor, flags);
	}
	
	/**
	 * Zip: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : Zip
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_zip() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_zip"));
	}
	/**
	 * Zip: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : Zip
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject text_zip(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_zip"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point AriesWebContestPageIframe_AriesWebContestPageIframe object in the SUT.
	 */
	protected IFtVerificationPoint AriesWebContestPageIframe_AriesWebContestPageIframeVP() 
	{
		return vp("AriesWebContestPageIframe_AriesWebContestPageIframe");
	}
	protected IFtVerificationPoint AriesWebContestPageIframe_AriesWebContestPageIframeVP(TestObject anchor)
	{
		return vp("AriesWebContestPageIframe_AriesWebContestPageIframe", anchor);
	}
	
	/**
	 * Locate and return the verification point buyerDescription_text object in the SUT.
	 */
	protected IFtVerificationPoint buyerDescription_textVP() 
	{
		return vp("buyerDescription_text");
	}
	protected IFtVerificationPoint buyerDescription_textVP(TestObject anchor)
	{
		return vp("buyerDescription_text", anchor);
	}
	
	/**
	 * Locate and return the verification point buyeryes_state object in the SUT.
	 */
	protected IFtVerificationPoint buyeryes_stateVP() 
	{
		return vp("buyeryes_state");
	}
	protected IFtVerificationPoint buyeryes_stateVP(TestObject anchor)
	{
		return vp("buyeryes_state", anchor);
	}
	
	/**
	 * Locate and return the verification point ContestPage_ContestPage object in the SUT.
	 */
	protected IFtVerificationPoint ContestPage_ContestPageVP() 
	{
		return vp("ContestPage_ContestPage");
	}
	protected IFtVerificationPoint ContestPage_ContestPageVP(TestObject anchor)
	{
		return vp("ContestPage_ContestPage", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlINPUTText_text object in the SUT.
	 */
	protected IFtVerificationPoint HtmlINPUTText_textVP() 
	{
		return vp("HtmlINPUTText_text");
	}
	protected IFtVerificationPoint HtmlINPUTText_textVP(TestObject anchor)
	{
		return vp("HtmlINPUTText_text", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlINPUTText_text_2 object in the SUT.
	 */
	protected IFtVerificationPoint HtmlINPUTText_text_2VP() 
	{
		return vp("HtmlINPUTText_text_2");
	}
	protected IFtVerificationPoint HtmlINPUTText_text_2VP(TestObject anchor)
	{
		return vp("HtmlINPUTText_text_2", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlTable_0_contentswithchildren object in the SUT.
	 */
	protected IFtVerificationPoint HtmlTable_0_contentswithchildrenVP() 
	{
		return vp("HtmlTable_0_contentswithchildren");
	}
	protected IFtVerificationPoint HtmlTable_0_contentswithchildrenVP(TestObject anchor)
	{
		return vp("HtmlTable_0_contentswithchildren", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlTable_0_contentswithchildren_2 object in the SUT.
	 */
	protected IFtVerificationPoint HtmlTable_0_contentswithchildren_2VP() 
	{
		return vp("HtmlTable_0_contentswithchildren_2");
	}
	protected IFtVerificationPoint HtmlTable_0_contentswithchildren_2VP(TestObject anchor)
	{
		return vp("HtmlTable_0_contentswithchildren_2", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlTable_0_contentswithchildren_3 object in the SUT.
	 */
	protected IFtVerificationPoint HtmlTable_0_contentswithchildren_3VP() 
	{
		return vp("HtmlTable_0_contentswithchildren_3");
	}
	protected IFtVerificationPoint HtmlTable_0_contentswithchildren_3VP(TestObject anchor)
	{
		return vp("HtmlTable_0_contentswithchildren_3", anchor);
	}
	
	/**
	 * Locate and return the verification point HtmlTable_0_visiblegrid object in the SUT.
	 */
	protected IFtVerificationPoint HtmlTable_0_visiblegridVP() 
	{
		return vp("HtmlTable_0_visiblegrid");
	}
	protected IFtVerificationPoint HtmlTable_0_visiblegridVP(TestObject anchor)
	{
		return vp("HtmlTable_0_visiblegrid", anchor);
	}
	
	/**
	 * Locate and return the verification point httpCivcez229NonprodHclpnpComA_httpCivcez229NonprodHclpnpComA object in the SUT.
	 */
	protected IFtVerificationPoint httpCivcez229NonprodHclpnpComA_httpCivcez229NonprodHclpnpComAVP() 
	{
		return vp("httpCivcez229NonprodHclpnpComA_httpCivcez229NonprodHclpnpComA");
	}
	protected IFtVerificationPoint httpCivcez229NonprodHclpnpComA_httpCivcez229NonprodHclpnpComAVP(TestObject anchor)
	{
		return vp("httpCivcez229NonprodHclpnpComA_httpCivcez229NonprodHclpnpComA", anchor);
	}
	
	/**
	 * Locate and return the verification point position_selected object in the SUT.
	 */
	protected IFtVerificationPoint position_selectedVP() 
	{
		return vp("position_selected");
	}
	protected IFtVerificationPoint position_selectedVP(TestObject anchor)
	{
		return vp("position_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point Reset_text object in the SUT.
	 */
	protected IFtVerificationPoint Reset_textVP() 
	{
		return vp("Reset_text");
	}
	protected IFtVerificationPoint Reset_textVP(TestObject anchor)
	{
		return vp("Reset_text", anchor);
	}
	
	/**
	 * Locate and return the verification point salary_selected object in the SUT.
	 */
	protected IFtVerificationPoint salary_selectedVP() 
	{
		return vp("salary_selected");
	}
	protected IFtVerificationPoint salary_selectedVP(TestObject anchor)
	{
		return vp("salary_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point testOnLandingPageOfRegister_text object in the SUT.
	 */
	protected IFtVerificationPoint testOnLandingPageOfRegister_textVP() 
	{
		return vp("testOnLandingPageOfRegister_text");
	}
	protected IFtVerificationPoint testOnLandingPageOfRegister_textVP(TestObject anchor)
	{
		return vp("testOnLandingPageOfRegister_text", anchor);
	}
	
	/**
	 * Locate and return the verification point testOnLandingPageOfRegister_text_2 object in the SUT.
	 */
	protected IFtVerificationPoint testOnLandingPageOfRegister_text_2VP() 
	{
		return vp("testOnLandingPageOfRegister_text_2");
	}
	protected IFtVerificationPoint testOnLandingPageOfRegister_text_2VP(TestObject anchor)
	{
		return vp("testOnLandingPageOfRegister_text_2", anchor);
	}
	
	/**
	 * Locate and return the verification point testOnLandingPageOfRegister_text_3 object in the SUT.
	 */
	protected IFtVerificationPoint testOnLandingPageOfRegister_text_3VP() 
	{
		return vp("testOnLandingPageOfRegister_text_3");
	}
	protected IFtVerificationPoint testOnLandingPageOfRegister_text_3VP(TestObject anchor)
	{
		return vp("testOnLandingPageOfRegister_text_3", anchor);
	}
	
	/**
	 * Locate and return the verification point YesIWantToRegisterToWinTheComp_text object in the SUT.
	 */
	protected IFtVerificationPoint YesIWantToRegisterToWinTheComp_textVP() 
	{
		return vp("YesIWantToRegisterToWinTheComp_text");
	}
	protected IFtVerificationPoint YesIWantToRegisterToWinTheComp_textVP(TestObject anchor)
	{
		return vp("YesIWantToRegisterToWinTheComp_text", anchor);
	}
	
	

	protected html_8604_iFrameHelper()
	{
		setScriptName("html_8604_iFrame");
	}
	
}

