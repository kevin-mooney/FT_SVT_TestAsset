// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>win32_8604_notepadCmd</b><br>
 * Generated     : <b>2019/02/12 12:57:27 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 8.1 x86 6.3 <br>
 * 
 * @since  February 12, 2019
 * @author JaspreetSinghC
 */
public abstract class win32_8604_notepadCmdHelper extends RationalTestScript
{
	/**
	 * AboutNotepad: with default state.
	 *		.text : About Notepad
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : About Notepad
	 */
	protected TopLevelSubitemTestObject aboutNotepadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("aboutNotepadwindow"));
	}
	/**
	 * AboutNotepad: with specific test context and state.
	 *		.text : About Notepad
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : About Notepad
	 */
	protected TopLevelSubitemTestObject aboutNotepadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("aboutNotepadwindow"), anchor, flags);
	}
	
	/**
	 * AdministratorCWindowsSystem32CmdExe: with default state.
	 *		.text : Administrator: C:\Windows\System32\cmd.exe
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Administrator: C:\Windows\System32\cmd.exe
	 */
	protected TopLevelSubitemTestObject administratorCWindowsSystem32C() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("administratorCWindowsSystem32C"));
	}
	/**
	 * AdministratorCWindowsSystem32CmdExe: with specific test context and state.
	 *		.text : Administrator: C:\Windows\System32\cmd.exe
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Administrator: C:\Windows\System32\cmd.exe
	 */
	protected TopLevelSubitemTestObject administratorCWindowsSystem32C(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("administratorCWindowsSystem32C"), anchor, flags);
	}
	
	/**
	 * AdministratorCommandPrompt: with default state.
	 *		.text : Administrator: Command Prompt
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Administrator: Command Prompt
	 */
	protected TopLevelSubitemTestObject administratorCommandPromptwind() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("administratorCommandPromptwind"));
	}
	/**
	 * AdministratorCommandPrompt: with specific test context and state.
	 *		.text : Administrator: Command Prompt
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Administrator: Command Prompt
	 */
	protected TopLevelSubitemTestObject administratorCommandPromptwind(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("administratorCommandPromptwind"), anchor, flags);
	}
	
	/**
	 * Application: with default state.
	 *		.text : Application
	 * 		.class : .Menubar
	 * 		.name : Application
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject applicationmenuBar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("applicationmenuBar"));
	}
	/**
	 * Application: with specific test context and state.
	 *		.text : Application
	 * 		.class : .Menubar
	 * 		.name : Application
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject applicationmenuBar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("applicationmenuBar"), anchor, flags);
	}
	
	/**
	 * Application: with default state.
	 *		.text : Application
	 * 		.class : .Menubar
	 * 		.name : Application
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject applicationmenuBar2() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("applicationmenuBar2"));
	}
	/**
	 * Application: with specific test context and state.
	 *		.text : Application
	 * 		.class : .Menubar
	 * 		.name : Application
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject applicationmenuBar2(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("applicationmenuBar2"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton2"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton2"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton3"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbutton3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbutton3"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 2
	 */
	protected GuiTestObject closebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("closebutton"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 2
	 */
	protected GuiTestObject closebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("closebutton"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Font style:
	 * 		.class : ComboBox
	 * 		.name : Font style:
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Font style:
	 * 		.class : ComboBox
	 * 		.name : Font style:
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Size:
	 * 		.class : ComboBox
	 * 		.name : Size:
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox2() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox2"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Size:
	 * 		.class : ComboBox
	 * 		.name : Size:
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox2(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox2"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Font:
	 * 		.class : ComboBox
	 * 		.name : Font:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox3() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox3"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Font:
	 * 		.class : ComboBox
	 * 		.name : Font:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox3(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox3"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Font style:
	 * 		.class : ComboBox
	 * 		.name : Font style:
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox4() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox4"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Font style:
	 * 		.class : ComboBox
	 * 		.name : Font style:
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox4(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox4"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Size:
	 * 		.class : ComboBox
	 * 		.name : Size:
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox5() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox5"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Size:
	 * 		.class : ComboBox
	 * 		.name : Size:
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox5(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox5"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox6() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox6"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxcomboBox6(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxcomboBox6"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Edit
	 * 		.class : .Menuitem
	 * 		.name : Edit
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject editmenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("editmenuItem"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Edit
	 * 		.class : .Menuitem
	 * 		.name : Edit
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject editmenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("editmenuItem"), anchor, flags);
	}
	
	/**
	 * File: with default state.
	 *		.text : File
	 * 		.class : .Menuitem
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject filemenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("filemenuItem"));
	}
	/**
	 * File: with specific test context and state.
	 *		.text : File
	 * 		.class : .Menuitem
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject filemenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("filemenuItem"), anchor, flags);
	}
	
	/**
	 * FindNext: with default state.
	 *		.text : Find Next
	 * 		.class : .Pushbutton
	 * 		.name : Find Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject findNextbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("findNextbutton"));
	}
	/**
	 * FindNext: with specific test context and state.
	 *		.text : Find Next
	 * 		.class : .Pushbutton
	 * 		.name : Find Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject findNextbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("findNextbutton"), anchor, flags);
	}
	
	/**
	 * Find: with default state.
	 *		.text : Find
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Find
	 */
	protected TopLevelSubitemTestObject findwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("findwindow"));
	}
	/**
	 * Find: with specific test context and state.
	 *		.text : Find
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Find
	 */
	protected TopLevelSubitemTestObject findwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("findwindow"), anchor, flags);
	}
	
	/**
	 * Format: with default state.
	 *		.text : Format
	 * 		.class : .Menuitem
	 * 		.name : Format
	 * 		.classIndex : 2
	 */
	protected GuiSubitemTestObject formatmenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("formatmenuItem"));
	}
	/**
	 * Format: with specific test context and state.
	 *		.text : Format
	 * 		.class : .Menuitem
	 * 		.name : Format
	 * 		.classIndex : 2
	 */
	protected GuiSubitemTestObject formatmenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("formatmenuItem"), anchor, flags);
	}
	
	/**
	 * Graphic: with default state.
	 *		.class : .Graphic
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject graphicwin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("graphicwin"));
	}
	/**
	 * Graphic: with specific test context and state.
	 *		.class : .Graphic
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject graphicwin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("graphicwin"), anchor, flags);
	}
	
	/**
	 * Help: with default state.
	 *		.text : Help
	 * 		.class : .Menuitem
	 * 		.name : Help
	 * 		.classIndex : 4
	 */
	protected GuiSubitemTestObject helpmenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("helpmenuItem"));
	}
	/**
	 * Help: with specific test context and state.
	 *		.text : Help
	 * 		.class : .Menuitem
	 * 		.name : Help
	 * 		.classIndex : 4
	 */
	protected GuiSubitemTestObject helpmenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("helpmenuItem"), anchor, flags);
	}
	
	/**
	 * MainInstructionIcon: with default state.
	 *		.class : .Graphic
	 * 		.name : MainInstructionIcon
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainInstructionIconwin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainInstructionIconwin"));
	}
	/**
	 * MainInstructionIcon: with specific test context and state.
	 *		.class : .Graphic
	 * 		.name : MainInstructionIcon
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainInstructionIconwin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainInstructionIconwin"), anchor, flags);
	}
	
	/**
	 * Name: with default state.
	 *		.class : .Text
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject nametext() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("nametext"));
	}
	/**
	 * Name: with specific test context and state.
	 *		.class : .Text
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject nametext(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("nametext"), anchor, flags);
	}
	
	/**
	 * Notepad3Notepad: with default state.
	 *		.text : Notepad3 - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Notepad3 - Notepad
	 */
	protected TopLevelSubitemTestObject notepad3Notepadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("notepad3Notepadwindow"));
	}
	/**
	 * Notepad3Notepad: with specific test context and state.
	 *		.text : Notepad3 - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Notepad3 - Notepad
	 */
	protected TopLevelSubitemTestObject notepad3Notepadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("notepad3Notepadwindow"), anchor, flags);
	}
	
	/**
	 * NotepadNotepad: with default state.
	 *		.text : Notepad - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Notepad - Notepad
	 */
	protected TopLevelSubitemTestObject notepadNotepadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("notepadNotepadwindow"));
	}
	/**
	 * NotepadNotepad: with specific test context and state.
	 *		.text : Notepad - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Notepad - Notepad
	 */
	protected TopLevelSubitemTestObject notepadNotepadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("notepadNotepadwindow"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton2"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton2"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton3"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton3"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton4() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton4"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton4(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton4"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		.text : Open
	 * 		.class : .Pushbutton
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiTestObject openbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("openbutton"));
	}
	/**
	 * Open: with specific test context and state.
	 *		.text : Open
	 * 		.class : .Pushbutton
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiTestObject openbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("openbutton"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		.class : .Pane
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject openpanel() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("openpanel"));
	}
	/**
	 * Open: with specific test context and state.
	 *		.class : .Pane
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject openpanel(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("openpanel"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		.text : Open
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Open
	 */
	protected TopLevelSubitemTestObject openwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("openwindow"));
	}
	/**
	 * Open: with specific test context and state.
	 *		.text : Open
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Open
	 */
	protected TopLevelSubitemTestObject openwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("openwindow"), anchor, flags);
	}
	
	/**
	 * SaveAs: with default state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject saveAswindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("saveAswindow"));
	}
	/**
	 * SaveAs: with specific test context and state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : notepad.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject saveAswindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("saveAswindow"), anchor, flags);
	}
	
	/**
	 * Save: with default state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject savebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("savebutton"));
	}
	/**
	 * Save: with specific test context and state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject savebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("savebutton"), anchor, flags);
	}
	
	/**
	 * SelectAdministratorCWindowsSystem32CmdExe: with default state.
	 *		.text : Select Administrator: C:\Windows\System32\cmd.exe
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Select Administrator: C:\Windows\System32\cmd.exe
	 */
	protected TopLevelSubitemTestObject selectAdministratorCWindowsSys() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("selectAdministratorCWindowsSys"));
	}
	/**
	 * SelectAdministratorCWindowsSystem32CmdExe: with specific test context and state.
	 *		.text : Select Administrator: C:\Windows\System32\cmd.exe
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Select Administrator: C:\Windows\System32\cmd.exe
	 */
	protected TopLevelSubitemTestObject selectAdministratorCWindowsSys(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("selectAdministratorCWindowsSys"), anchor, flags);
	}
	
	/**
	 * SelectAdministratorCommandPrompt: with default state.
	 *		.text : Select Administrator: Command Prompt
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Select Administrator: Command Prompt
	 */
	protected TopLevelSubitemTestObject selectAdministratorCommandProm() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("selectAdministratorCommandProm"));
	}
	/**
	 * SelectAdministratorCommandPrompt: with specific test context and state.
	 *		.text : Select Administrator: Command Prompt
	 * 		.class : ConsoleWindowClass
	 * 		.processName : cmd.exe
	 * 		.name : Select Administrator: Command Prompt
	 */
	protected TopLevelSubitemTestObject selectAdministratorCommandProm(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("selectAdministratorCommandProm"), anchor, flags);
	}
	
	/**
	 * System: with default state.
	 *		.text : System
	 * 		.class : .Menubar
	 * 		.name : System
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject systemmenuBar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("systemmenuBar"));
	}
	/**
	 * System: with specific test context and state.
	 *		.text : System
	 * 		.class : .Menubar
	 * 		.name : System
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject systemmenuBar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("systemmenuBar"), anchor, flags);
	}
	
	/**
	 * Titlebar: with default state.
	 *		.class : .Titlebar
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject titlebarwin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("titlebarwin"));
	}
	/**
	 * Titlebar: with specific test context and state.
	 *		.class : .Titlebar
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject titlebarwin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("titlebarwin"), anchor, flags);
	}
	
	/**
	 * TreeView: with default state.
	 *		.text : null
	 * 		.class : SysTreeView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject treeViewtree() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("treeViewtree"));
	}
	/**
	 * TreeView: with specific test context and state.
	 *		.text : null
	 * 		.class : SysTreeView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject treeViewtree(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("treeViewtree"), anchor, flags);
	}
	
	/**
	 * TypingIntoNotepadToRecordATest: with default state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest"));
	}
	/**
	 * TypingIntoNotepadToRecordATest: with specific test context and state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest"), anchor, flags);
	}
	
	/**
	 * TypingIntoNotepadToRecordATestThisIALineThatWillContaingManyCharacters123456AsdfghLJjjjjjjjlkkkkkk: with default state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest2"));
	}
	/**
	 * TypingIntoNotepadToRecordATestThisIALineThatWillContaingManyCharacters123456AsdfghLJjjjjjjjlkkkkkk: with specific test context and state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest2"), anchor, flags);
	}
	
	/**
	 * TypingIntoNotepadToRecordATestThisIALineThatWillContaingManyCharacters123456AsdfghLJjjjjjjjlkkkkkk: with default state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest3() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest3"));
	}
	/**
	 * TypingIntoNotepadToRecordATestThisIALineThatWillContaingManyCharacters123456AsdfghLJjjjjjjjlkkkkkk: with specific test context and state.
	 *		.text : Text Editor
	 * 		.class : Edit
	 * 		.name : Text Editor
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject typingIntoNotepadToRecordATest3(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("typingIntoNotepadToRecordATest3"), anchor, flags);
	}
	
	/**
	 * UntitledNotepad: with default state.
	 *		.text : Untitled - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Untitled - Notepad
	 */
	protected TopLevelSubitemTestObject untitledNotepadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("untitledNotepadwindow"));
	}
	/**
	 * UntitledNotepad: with specific test context and state.
	 *		.text : Untitled - Notepad
	 * 		.class : Notepad
	 * 		.processName : notepad.exe
	 * 		.name : Untitled - Notepad
	 */
	protected TopLevelSubitemTestObject untitledNotepadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("untitledNotepadwindow"), anchor, flags);
	}
	
	/**
	 * View: with default state.
	 *		.text : View
	 * 		.class : .Menuitem
	 * 		.name : View
	 * 		.classIndex : 3
	 */
	protected GuiSubitemTestObject viewmenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("viewmenuItem"));
	}
	/**
	 * View: with specific test context and state.
	 *		.text : View
	 * 		.class : .Menuitem
	 * 		.name : View
	 * 		.classIndex : 3
	 */
	protected GuiSubitemTestObject viewmenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("viewmenuItem"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point AboutNotepad_standard object in the SUT.
	 */
	protected IFtVerificationPoint AboutNotepad_standardVP() 
	{
		return vp("AboutNotepad_standard");
	}
	protected IFtVerificationPoint AboutNotepad_standardVP(TestObject anchor)
	{
		return vp("AboutNotepad_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point AboutNotepad_text object in the SUT.
	 */
	protected IFtVerificationPoint AboutNotepad_textVP() 
	{
		return vp("AboutNotepad_text");
	}
	protected IFtVerificationPoint AboutNotepad_textVP(TestObject anchor)
	{
		return vp("AboutNotepad_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Edit_menu object in the SUT.
	 */
	protected IFtVerificationPoint Edit_menuVP() 
	{
		return vp("Edit_menu");
	}
	protected IFtVerificationPoint Edit_menuVP(TestObject anchor)
	{
		return vp("Edit_menu", anchor);
	}
	
	/**
	 * Locate and return the verification point File_menu object in the SUT.
	 */
	protected IFtVerificationPoint File_menuVP() 
	{
		return vp("File_menu");
	}
	protected IFtVerificationPoint File_menuVP(TestObject anchor)
	{
		return vp("File_menu", anchor);
	}
	
	/**
	 * Locate and return the verification point Format_menu object in the SUT.
	 */
	protected IFtVerificationPoint Format_menuVP() 
	{
		return vp("Format_menu");
	}
	protected IFtVerificationPoint Format_menuVP(TestObject anchor)
	{
		return vp("Format_menu", anchor);
	}
	
	/**
	 * Locate and return the verification point Graphic_Graphic object in the SUT.
	 */
	protected IFtVerificationPoint Graphic_GraphicVP() 
	{
		return vp("Graphic_Graphic");
	}
	protected IFtVerificationPoint Graphic_GraphicVP(TestObject anchor)
	{
		return vp("Graphic_Graphic", anchor);
	}
	
	/**
	 * Locate and return the verification point Help_extendedMenu object in the SUT.
	 */
	protected IFtVerificationPoint Help_extendedMenuVP() 
	{
		return vp("Help_extendedMenu");
	}
	protected IFtVerificationPoint Help_extendedMenuVP(TestObject anchor)
	{
		return vp("Help_extendedMenu", anchor);
	}
	
	/**
	 * Locate and return the verification point MainInstructionIcon_MainInstructionIcon object in the SUT.
	 */
	protected IFtVerificationPoint MainInstructionIcon_MainInstructionIconVP() 
	{
		return vp("MainInstructionIcon_MainInstructionIcon");
	}
	protected IFtVerificationPoint MainInstructionIcon_MainInstructionIconVP(TestObject anchor)
	{
		return vp("MainInstructionIcon_MainInstructionIcon", anchor);
	}
	
	/**
	 * Locate and return the verification point MainInstructionIcon_MainInstructionIcon_2 object in the SUT.
	 */
	protected IFtVerificationPoint MainInstructionIcon_MainInstructionIcon_2VP() 
	{
		return vp("MainInstructionIcon_MainInstructionIcon_2");
	}
	protected IFtVerificationPoint MainInstructionIcon_MainInstructionIcon_2VP(TestObject anchor)
	{
		return vp("MainInstructionIcon_MainInstructionIcon_2", anchor);
	}
	
	/**
	 * Locate and return the verification point OK_text object in the SUT.
	 */
	protected IFtVerificationPoint OK_textVP() 
	{
		return vp("OK_text");
	}
	protected IFtVerificationPoint OK_textVP(TestObject anchor)
	{
		return vp("OK_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Open_standard object in the SUT.
	 */
	protected IFtVerificationPoint Open_standardVP() 
	{
		return vp("Open_standard");
	}
	protected IFtVerificationPoint Open_standardVP(TestObject anchor)
	{
		return vp("Open_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Open_standard_2 object in the SUT.
	 */
	protected IFtVerificationPoint Open_standard_2VP() 
	{
		return vp("Open_standard_2");
	}
	protected IFtVerificationPoint Open_standard_2VP(TestObject anchor)
	{
		return vp("Open_standard_2", anchor);
	}
	
	/**
	 * Locate and return the verification point System_System object in the SUT.
	 */
	protected IFtVerificationPoint System_SystemVP() 
	{
		return vp("System_System");
	}
	protected IFtVerificationPoint System_SystemVP(TestObject anchor)
	{
		return vp("System_System", anchor);
	}
	
	/**
	 * Locate and return the verification point Titlebar_text object in the SUT.
	 */
	protected IFtVerificationPoint Titlebar_textVP() 
	{
		return vp("Titlebar_text");
	}
	protected IFtVerificationPoint Titlebar_textVP(TestObject anchor)
	{
		return vp("Titlebar_text", anchor);
	}
	
	/**
	 * Locate and return the verification point TypingIntoNotepadToRecordATest_selectedText object in the SUT.
	 */
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_selectedTextVP() 
	{
		return vp("TypingIntoNotepadToRecordATest_selectedText");
	}
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_selectedTextVP(TestObject anchor)
	{
		return vp("TypingIntoNotepadToRecordATest_selectedText", anchor);
	}
	
	/**
	 * Locate and return the verification point TypingIntoNotepadToRecordATest_selectedText_2 object in the SUT.
	 */
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_selectedText_2VP() 
	{
		return vp("TypingIntoNotepadToRecordATest_selectedText_2");
	}
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_selectedText_2VP(TestObject anchor)
	{
		return vp("TypingIntoNotepadToRecordATest_selectedText_2", anchor);
	}
	
	/**
	 * Locate and return the verification point TypingIntoNotepadToRecordATest_text object in the SUT.
	 */
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_textVP() 
	{
		return vp("TypingIntoNotepadToRecordATest_text");
	}
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_textVP(TestObject anchor)
	{
		return vp("TypingIntoNotepadToRecordATest_text", anchor);
	}
	
	/**
	 * Locate and return the verification point TypingIntoNotepadToRecordATest_text_2 object in the SUT.
	 */
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_text_2VP() 
	{
		return vp("TypingIntoNotepadToRecordATest_text_2");
	}
	protected IFtVerificationPoint TypingIntoNotepadToRecordATest_text_2VP(TestObject anchor)
	{
		return vp("TypingIntoNotepadToRecordATest_text_2", anchor);
	}
	
	/**
	 * Locate and return the verification point View_extendedMenu object in the SUT.
	 */
	protected IFtVerificationPoint View_extendedMenuVP() 
	{
		return vp("View_extendedMenu");
	}
	protected IFtVerificationPoint View_extendedMenuVP(TestObject anchor)
	{
		return vp("View_extendedMenu", anchor);
	}
	
	

	protected win32_8604_notepadCmdHelper()
	{
		setScriptName("win32_8604_notepadCmd");
	}
	
}

