// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Script1</b><br>
 * Generated     : <b>2019/04/22 3:03:46 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 10 amd64 10.0 <br>
 * 
 * @since  April 22, 2019
 * @author jhansi.m
 */
public abstract class Script1Helper extends RationalTestScript
{
	/**
	 * CardNumberIncludeTheSpaces: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberIncludeTheSpaces() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberIncludeTheSpaces"));
	}
	/**
	 * CardNumberIncludeTheSpaces: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberIncludeTheSpaces(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberIncludeTheSpaces"), anchor, flags);
	}
	
	/**
	 * ClassicsCD: with default state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject classicsCD() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"));
	}
	/**
	 * ClassicsCD: with specific test context and state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject classicsCD(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"), anchor, flags);
	}
	
	/**
	 * ExpirationDate: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"));
	}
	/**
	 * ExpirationDate: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"), anchor, flags);
	}
	
	/**
	 * MemberLogon: with default state.
	 *		.captionText : Member Logon
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Member Logon
	 * 		.processName : java.exe
	 * 		name : logFrame1
	 */
	protected TopLevelTestObject memberLogon() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("memberLogon"));
	}
	/**
	 * MemberLogon: with specific test context and state.
	 *		.captionText : Member Logon
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Member Logon
	 * 		.processName : java.exe
	 * 		name : logFrame1
	 */
	protected TopLevelTestObject memberLogon(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("memberLogon"), anchor, flags);
	}
	
	/**
	 * Message: with default state.
	 *		.captionText : Message
	 * 		.class : javax.swing.JDialog
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject message() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("message"));
	}
	/**
	 * Message: with specific test context and state.
	 *		.captionText : Message
	 * 		.class : javax.swing.JDialog
	 * 		.processName : java.exe
	 */
	protected TopLevelTestObject message(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("message"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : OK
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"), anchor, flags);
	}
	
	/**
	 * PlaceAnOrder: with default state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : java.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"));
	}
	/**
	 * PlaceAnOrder: with specific test context and state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : java.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"), anchor, flags);
	}
	
	/**
	 * Schubert4_14Jpg: with default state.
	 *		.class : javax.swing.JLabel
	 * 		iconDescription : Schubert4_14.jpg
	 * 		.classIndex : 2
	 */
	protected GuiTestObject schubert4_14Jpg() 
	{
		return new GuiTestObject(
                        getMappedTestObject("schubert4_14Jpg"));
	}
	/**
	 * Schubert4_14Jpg: with specific test context and state.
	 *		.class : javax.swing.JLabel
	 * 		iconDescription : Schubert4_14.jpg
	 * 		.classIndex : 2
	 */
	protected GuiTestObject schubert4_14Jpg(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("schubert4_14Jpg"), anchor, flags);
	}
	
	/**
	 * tree2: with default state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"));
	}
	/**
	 * tree2: with specific test context and state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point MemberLogon_standard object in the SUT.
	 */
	protected IFtVerificationPoint MemberLogon_standardVP() 
	{
		return vp("MemberLogon_standard");
	}
	protected IFtVerificationPoint MemberLogon_standardVP(TestObject anchor)
	{
		return vp("MemberLogon_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Message_standard object in the SUT.
	 */
	protected IFtVerificationPoint Message_standardVP() 
	{
		return vp("Message_standard");
	}
	protected IFtVerificationPoint Message_standardVP(TestObject anchor)
	{
		return vp("Message_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point PlaceOrder_standard object in the SUT.
	 */
	protected IFtVerificationPoint PlaceOrder_standardVP() 
	{
		return vp("PlaceOrder_standard");
	}
	protected IFtVerificationPoint PlaceOrder_standardVP(TestObject anchor)
	{
		return vp("PlaceOrder_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Schubert4_14Jpg_icontext object in the SUT.
	 */
	protected IFtVerificationPoint Schubert4_14Jpg_icontextVP() 
	{
		return vp("Schubert4_14Jpg_icontext");
	}
	protected IFtVerificationPoint Schubert4_14Jpg_icontextVP(TestObject anchor)
	{
		return vp("Schubert4_14Jpg_icontext", anchor);
	}
	
	

	protected Script1Helper()
	{
		setScriptName("Script1");
	}
	
}

